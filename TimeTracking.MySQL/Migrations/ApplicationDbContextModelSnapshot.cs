// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeTracking.MySQL;

#nullable disable

namespace TimeTracking.MySQL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TimeTracking.DataModels.DayMark", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("name");

                    b.Property<string>("Short")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("short");

                    b.HasKey("ID")
                        .HasName("idx_pk_day_mark");

                    b.ToTable("day_mark", "time_tracking");
                });

            modelBuilder.Entity("TimeTracking.DataModels.EmployeeCalendarItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("DayMarkID")
                        .HasColumnType("int")
                        .HasColumnName("day_mark_id");

                    b.Property<byte[]>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("BINARY(16)")
                        .HasColumnName("employee_id");

                    b.HasKey("Id")
                        .HasName("idx_pk_employee_calendar_item");

                    b.HasIndex("DayMarkID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("employee_calendar_item", "time_tracking");
                });

            modelBuilder.Entity("TimeTracking.DataModels.Organisation.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Appartment")
                        .HasColumnType("int")
                        .HasColumnName("appartment");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fax");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("house");

                    b.Property<string>("Phone")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("postal_code");

                    b.Property<string>("Region")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("street");

                    b.HasKey("Id");

                    b.ToTable("address", "time_tracking");
                });

            modelBuilder.Entity("TimeTracking.DataModels.Organisation.Department", b =>
                {
                    b.Property<byte[]>("ID")
                        .HasColumnType("BINARY(16)")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("name");

                    b.HasKey("ID")
                        .HasName("idx_pk_department");

                    b.ToTable("department", "time_tracking");
                });

            modelBuilder.Entity("TimeTracking.DataModels.Organisation.Employee", b =>
                {
                    b.Property<byte[]>("ID")
                        .HasColumnType("BINARY(16)")
                        .HasColumnName("ID");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("birth_date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<int>("PersonnelNumber")
                        .HasColumnType("int")
                        .HasColumnName("personnel_number");

                    b.Property<byte[]>("Photo")
                        .HasMaxLength(1000000000)
                        .HasColumnType("BLOB")
                        .HasColumnName("photo");

                    b.HasKey("ID")
                        .HasName("idx_pk_employee");

                    b.HasIndex("AddressId");

                    b.HasIndex("PersonnelNumber")
                        .IsUnique();

                    b.ToTable("employee", "time_tracking");
                });

            modelBuilder.Entity("TimeTracking.DataModels.Organisation.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("position_id");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("title");

                    b.HasKey("PositionId")
                        .HasName("idx_pk_position");

                    b.ToTable("position", "time_tracking");
                });

            modelBuilder.Entity("TimeTracking.DataModels.Organisation.PositionAssignment", b =>
                {
                    b.Property<byte[]>("ID")
                        .HasColumnType("BINARY(16)")
                        .HasColumnName("ID");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("date_created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DateModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("date_modified")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<byte[]>("DepartmentID")
                        .IsRequired()
                        .HasColumnType("BINARY(16)")
                        .HasColumnName("department_ID");

                    b.Property<byte[]>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("BINARY(16)")
                        .HasColumnName("employee_ID");

                    b.Property<int>("PositionID")
                        .HasColumnType("int")
                        .HasColumnName("position_ID");

                    b.HasKey("ID")
                        .HasName("idx_pk_position_assignment");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EmployeeID")
                        .IsUnique();

                    b.HasIndex("PositionID");

                    b.ToTable("position_assignment", "time_tracking");
                });

            modelBuilder.Entity("TimeTracking.DataModels.EmployeeCalendarItem", b =>
                {
                    b.HasOne("TimeTracking.DataModels.DayMark", "Mark")
                        .WithMany()
                        .HasForeignKey("DayMarkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_item_day_mark");

                    b.HasOne("TimeTracking.DataModels.Organisation.Employee", null)
                        .WithMany("Calendar")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mark");
                });

            modelBuilder.Entity("TimeTracking.DataModels.Organisation.Employee", b =>
                {
                    b.HasOne("TimeTracking.DataModels.Organisation.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("TimeTracking.DataModels.Organisation.PositionAssignment", b =>
                {
                    b.HasOne("TimeTracking.DataModels.Organisation.Department", "Department")
                        .WithMany("EmployeeAsingments")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_department_position_assignment");

                    b.HasOne("TimeTracking.DataModels.Organisation.Employee", "Employee")
                        .WithOne("Assignment")
                        .HasForeignKey("TimeTracking.DataModels.Organisation.PositionAssignment", "EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_employee_position_assignment");

                    b.HasOne("TimeTracking.DataModels.Organisation.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_position_position_assignment");

                    b.Navigation("Department");

                    b.Navigation("Employee");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("TimeTracking.DataModels.Organisation.Department", b =>
                {
                    b.Navigation("EmployeeAsingments");
                });

            modelBuilder.Entity("TimeTracking.DataModels.Organisation.Employee", b =>
                {
                    b.Navigation("Assignment")
                        .IsRequired();

                    b.Navigation("Calendar");
                });
#pragma warning restore 612, 618
        }
    }
}
